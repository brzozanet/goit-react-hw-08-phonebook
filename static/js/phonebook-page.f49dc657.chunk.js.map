{"version":3,"file":"static/js/phonebook-page.f49dc657.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","pages/Phonebook.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/filtersSlice';\nimport { TextField } from '@mui/material';\n\nconst styles = {\n  containerDiv: ['flex', 'justify-center', 'mt-4'].join(' '),\n  filterForm: [\n    'flex',\n    'justify-center',\n    'flex-col',\n    'border-2',\n    'p-3',\n    'rounded-3xl',\n    'shadow-lg',\n  ].join(' '),\n  textH3: ['text-center', 'mb-5'].join(' '),\n  label: 'mb-5',\n};\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => dispatch(filterContact(e.target.value));\n\n  return (\n    <div className={styles.containerDiv}>\n      <form className={styles.filterForm}>\n        <h3 className={styles.textH3}>Find contacts by name</h3>\n        <label className={styles.label}>\n          <TextField onChange={handleFilter} size=\"small\" label=\"Enter name\"/>\n        </label>\n      </form>\n    </div>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filters;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        if (filter === '') {\n            return contacts;\n        } else {\n            return contacts.filter(contact =>\n                contact.name.toLowerCase().includes(filter.filter),\n            );\n        }\n    },\n);\n","import { useDispatch, useSelector } from 'react-redux';\n// import css from './ContactsForm.module.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Button, TextField } from '@mui/material';\n\nconst styles = {\n  containerDiv: ['flex', 'justify-center', 'mt-5'].join(' '),\n  contactForm: [\n    'flex',\n    'flex-col',\n    'border-2',\n    'p-3',\n    'rounded-3xl',\n    'shadow-lg',\n  ].join(' '),\n  label: 'mb-5',\n};\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n\n  const stateContacts = useSelector(selectContacts);\n  const stateContactsNames = stateContacts.map(contact => contact.name);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    };\n\n    if (stateContactsNames.includes(contact.name)) {\n      e.target.reset();\n      return alert(`${contact.name} is alredy in contacts`);\n    }\n\n    dispatch(addContact(contact));\n\n    e.target.reset();\n  };\n\n  return (\n    <div className={styles.containerDiv}>\n      <form className={styles.contactForm} onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          <TextField\n            type=\"text\"\n            size=\"small\"\n            name=\"name\"\n            label=\"Name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          <TextField\n            type=\"tel\"\n            size=\"small\"\n            name=\"number\"\n            label=\"Number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <Button type=\"submit\" variant=\"contained\">\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\",\"contactsListItem\":\"ContactsList_contactsListItem__DDy5j\",\"button\":\"ContactsList_button__EDc5e\"};","import { useSelector, useDispatch } from 'react-redux';\nimport css from './ContactsList.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = (id) => dispatch(deleteContact(id));\n\n  return (\n    <ul className={css.contactsList}>\n      {contacts.map(contact => (\n        <li key={contact.id} className={css.contactsItem}>\n          <div>\n            <div>\n              {contact.name}: {contact.number}\n            </div>\n            <button type=\"submit\" value={contact.id} onClick={() => handleDelete(contact.id)}>\n              Delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Filter } from 'components/Filter';\nimport { ContactsForm } from 'components/ContactsForm';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nconst styles = {\n  containerDiv: ['flex', 'justify-center', 'mb-4', 'gap-4'].join(' '),\n};\n\nconst Phonebook = () => {\n  const isLoading = useSelector(selectLoading);\n  const isError = useSelector(selectError);\n\n  return (\n    <div>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n      </HelmetProvider>\n\n      <div className={styles.containerDiv}>\n        <ContactsForm />\n        <Filter />\n      </div>\n      {isLoading ? <p>Loading contacts...</p> : <ContactsList />}\n      {isError && <p>Something went wrong. Try again later.</p>}\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["styles","containerDiv","join","filterForm","textH3","label","Filter","dispatch","useDispatch","className","TextField","onChange","e","filterContact","target","value","size","selectContacts","state","contacts","selectLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filters","filter","contact","name","toLowerCase","includes","contactForm","ContactsForm","stateContactsNames","useSelector","map","onSubmit","preventDefault","elements","number","reset","alert","addContact","type","title","required","Button","variant","ContactsList","css","id","onClick","deleteContact","isError"],"sourceRoot":""}